package com.tpb.paygate.ws;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 2.5.1
 * 2016-04-14T16:44:23.618+07:00
 * Generated source version: 2.5.1
 * 
 */
@WebServiceClient(name = "EBGProcessor", 
                  wsdlLocation = "file:/home/phuongle/NetBeansProjects/test_gen_ws_client/src/main/wsdl/EBGProcessor.wsdl",
                  targetNamespace = "http://ws.paygate.tpb.com") 
public class EBGProcessor extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://ws.paygate.tpb.com", "EBGProcessor");
    public final static QName EBGProcessorHttpSoap11Endpoint = new QName("http://ws.paygate.tpb.com", "EBGProcessorHttpSoap11Endpoint");
    public final static QName EBGProcessorHttpEndpoint = new QName("http://ws.paygate.tpb.com", "EBGProcessorHttpEndpoint");
    public final static QName EBGProcessorHttpSoap12Endpoint = new QName("http://ws.paygate.tpb.com", "EBGProcessorHttpSoap12Endpoint");
    static {
        URL url = null;
        try {
            url = new URL("file:/home/phuongle/NetBeansProjects/test_gen_ws_client/src/main/wsdl/EBGProcessor.wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(EBGProcessor.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "file:/home/phuongle/NetBeansProjects/test_gen_ws_client/src/main/wsdl/EBGProcessor.wsdl");
        }
        WSDL_LOCATION = url;
    }

    public EBGProcessor(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public EBGProcessor(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public EBGProcessor() {
        super(WSDL_LOCATION, SERVICE);
    }
    
    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
    public EBGProcessor(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
    public EBGProcessor(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
    public EBGProcessor(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     *
     * @return
     *     returns EBGProcessorPortType
     */
    @WebEndpoint(name = "EBGProcessorHttpSoap11Endpoint")
    public EBGProcessorPortType getEBGProcessorHttpSoap11Endpoint() {
        return super.getPort(EBGProcessorHttpSoap11Endpoint, EBGProcessorPortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns EBGProcessorPortType
     */
    @WebEndpoint(name = "EBGProcessorHttpSoap11Endpoint")
    public EBGProcessorPortType getEBGProcessorHttpSoap11Endpoint(WebServiceFeature... features) {
        return super.getPort(EBGProcessorHttpSoap11Endpoint, EBGProcessorPortType.class, features);
    }
    /**
     *
     * @return
     *     returns EBGProcessorPortType
     */
    @WebEndpoint(name = "EBGProcessorHttpEndpoint")
    public EBGProcessorPortType getEBGProcessorHttpEndpoint() {
        return super.getPort(EBGProcessorHttpEndpoint, EBGProcessorPortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns EBGProcessorPortType
     */
    @WebEndpoint(name = "EBGProcessorHttpEndpoint")
    public EBGProcessorPortType getEBGProcessorHttpEndpoint(WebServiceFeature... features) {
        return super.getPort(EBGProcessorHttpEndpoint, EBGProcessorPortType.class, features);
    }
    /**
     *
     * @return
     *     returns EBGProcessorPortType
     */
    @WebEndpoint(name = "EBGProcessorHttpSoap12Endpoint")
    public EBGProcessorPortType getEBGProcessorHttpSoap12Endpoint() {
        return super.getPort(EBGProcessorHttpSoap12Endpoint, EBGProcessorPortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns EBGProcessorPortType
     */
    @WebEndpoint(name = "EBGProcessorHttpSoap12Endpoint")
    public EBGProcessorPortType getEBGProcessorHttpSoap12Endpoint(WebServiceFeature... features) {
        return super.getPort(EBGProcessorHttpSoap12Endpoint, EBGProcessorPortType.class, features);
    }

}
